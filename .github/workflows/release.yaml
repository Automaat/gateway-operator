name: release
run-name: "Release ${{ format('{0}', github.event.inputs.tag) }}"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: The version to release (e.g. v1.2.3)
        required: true
      latest:
        description: Whether to tag this build latest
        type: boolean
        default: false
      prerelease:
        description: Whether to make a created release a pre-release
        default: 'true'
        required: true

jobs:
  semver:
    outputs:
      fullversion: ${{ steps.semver_parser.outputs.fullversion }}
      major: ${{ steps.semver_parser.outputs.major }}
      minor: ${{ steps.semver_parser.outputs.minor }}
      patch: ${{ steps.semver_parser.outputs.patch }}
      prerelease: ${{ steps.semver_parser.outputs.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - uses: mukunku/tag-exists-action@v1.4.0
        id: check-tag
        name: check if tag already exists
        with:
          tag: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: fail if tag already exists
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        run: exit 1

      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1.4.7
        with:
          input_string: ${{ github.event.inputs.tag }}
          version_extractor_regex: 'v(.*)$'

  build-push-images:
    uses: ./.github/workflows/__build-workflow.yaml
    secrets:
      token: ${{ secrets.DOCKERHUB_PUSH_TOKEN }}
    with:
      registry: docker.io
      username: ${{ vars.DOCKERHUB_PUSH_USERNAME  }}
      image-name: ${{ github.repository }}
      push: true
      latest: ${{ inputs.latest }}

  test-integration-current-kubernetes:
    runs-on: ubuntu-latest
    needs: build-push-images
    strategy:
      matrix:
        kubernetes-version:
          - 'v1.24.2'
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Kubernetes ${{ matrix.kubernetes_version }} Integration Tests
        run: make test.integration

  test-e2e-current-kubernetes:
    runs-on: ubuntu-latest
    needs: build-push-images
    strategy:
      matrix:
        kubernetes-version:
          - 'v1.24.2'
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Kubernetes ${{ matrix.kubernetes_version }} E2E Tests
        run: make test.e2e

  community-operators-push-bundle:
    runs-on: ubuntu-latest
    needs:
      - semver
      - build-push-images
      - test-integration-current-kubernetes
      - test-e2e-current-kubernetes

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Ensure version is set
      env:
        VERSION: ${{ needs.semver.outputs.fullversion }}
      run: |
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo ${VERSION} > VERSION

    - name: Generate bundle
      run: make bundle

    - name: Checkout k8s-operatorhub/community-operators repo
      uses: actions/checkout@v4
      with:
        repository: k8s-operatorhub/community-operators
        path: k8s-operatorhub-community-operators

    - name: Copy the bundle to the k8s-operatorhub-community-operators repo
      # Operator bundles in community-operators do not have a 'v' prefix in directory
      # names so we use the 'v' stripped tag.
      run: |
        mkdir -p k8s-operatorhub-community-operators/operators/kong-gateway-operator/${{ env.VERSION }}
        cp -r bundle/regular/* k8s-operatorhub-community-operators/operators/kong-gateway-operator/${{ env.VERSION }}

    - name: Read PR template from k8s-operatorhub-community-operators/docs/pull_request_template.md
      id: pr-template
      run: |
        echo "PR_TEMPLATE<<EOF" >> $GITHUB_ENV
        cat k8s-operatorhub-community-operators/docs/pull_request_template.md >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: GPG sign the commits
      uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Pushes bundle to k8s-operatorhub-community-operators
      uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
      with:
        token: ${{ secrets.PAT_GITHUB }}
        path: k8s-operatorhub-community-operators
        push-to-fork: Kong/k8s-operatorhub-community-operators
        add-paths: operators/kong-gateway-operator/${{ env.VERSION }}
        commit-message: operator kong-gateway-operator (${{ env.VERSION }})
        committer: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
        author: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
        signoff: true
        base: main
        branch: kong-gateway-operator-${{ github.event.inputs.tag }}
        delete-branch: true
        title: operator kong-gateway-operator (${{ env.VERSION }})
        body: ${{ env.PR_TEMPLATE }}

  publish-release:
    runs-on: ubuntu-latest
    needs:
      - semver
      - build-push-images
      - test-integration-current-kubernetes
      - test-e2e-current-kubernetes
      - community-operators-push-bundle
    steps:
      - name: determine release type (release, prerelease)
        id: release_type
        shell: bash
        run: |
          if [[ "${{ github.event.inputs.prerelease }}" == "true" ]]; then
            echo "type=prerelease" >> $GITHUB_OUTPUT
          else
            echo "type=release" >> $GITHUB_OUTPUT
          fi

      # Use the main branch as a base for the release.
      # Any changes made on the branch that the workflow was triggered on will not be included 
      # in the release PR. If anything needs to be fixed before a release, it should be
      # done on the main branch.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.PAT_GITHUB }}

      - name: setup golang
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      # The bumped version file is included in the release PR.
      - name: Ensure version is set
        env:
          VERSION: ${{ needs.semver.outputs.fullversion }}
        run: |
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo ${VERSION} > VERSION

      # Generated bundles and kustomized config are part of the release PR.
      # This is done locally in this job, to avoid including unintended changes.
      # If anything needs to be fixed before a release, it should be done on the main branch.
      - name: Generate bundles
        run: |
          make bundle

      - name: GPG sign the commits
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # PRs to the main branch will update the version file, generated bundles and kustomized config.
      - name: create a release PR
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ secrets.PAT_GITHUB }}
          path: .
          add-paths: |
            bundle
            config
            VERSION
          commit-message: "chore(${{ steps.release_type.outputs.type }}): [bot] ${{ env.VERSION }}"
          committer: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          author: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          signoff: true
          delete-branch: true
          title: "chore(${{ steps.release_type.outputs.type }}): [bot] ${{ env.VERSION }}"
          body: "chore(${{ steps.release_type.outputs.type }}): [bot] ${{ env.VERSION }}"

      - name: Checkout to Kong/gateway-operator-docs repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: Kong/gateway-operator-docs
          path: gateway-operator-docs

      - name: Update docs repo with new release
        run: |
          rm -rf gateway-operator-docs/config
          cp -r config gateway-operator-docs
          cp CHANGELOG.md gateway-operator-docs

      - name: GPG sign the commits
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # Create a PR to update the docs repo with the new release.
      # PR includes the CHANGELOG and config files.
      - name: Create a PR to Kong/gateway-operator-docs
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ secrets.PAT_GITHUB }}
          path: gateway-operator-docs
          add-paths: |
            config
            CHANGELOG.md
          commit-message: "chore(release): operator kong-gateway-operator (${{ env.VERSION }})"
          committer: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          author: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          base: main
          branch: kong-gateway-operator-${{ github.event.inputs.tag }}
          delete-branch: true
          title: operator kong-gateway-operator (${{ env.VERSION }})
          body: operator kong-gateway-operator (${{ env.VERSION }})
