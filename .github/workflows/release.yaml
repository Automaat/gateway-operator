name: release
run-name: "Release ${{ format('{0} (type: {1})', inputs.tag, inputs.release_type) }} "

on:
  workflow_dispatch:
    inputs:
      tag:
        description: The version to release (e.g. v1.2.3)
        required: true
      latest:
        description: Whether to tag this build latest
        type: boolean
        default: false
      release_type:
        description: Whether to make a created release a pre-release
        required: true
        default: 'prerelease'
        type: choice
        options:
        - prerelease
        - release

jobs:
  semver:
    outputs:
      fullversion: ${{ steps.semver_parser.outputs.fullversion }}
      major: ${{ steps.semver_parser.outputs.major }}
      minor: ${{ steps.semver_parser.outputs.minor }}
      patch: ${{ steps.semver_parser.outputs.patch }}
      prerelease: ${{ steps.semver_parser.outputs.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - uses: mukunku/tag-exists-action@v1.4.0
        id: check-tag
        name: check if tag already exists
        with:
          tag: ${{ inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: fail if tag already exists
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        run: exit 1

      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1.4.7
        with:
          input_string: ${{ inputs.tag }}
          version_extractor_regex: 'v(.*)$'

  build-push-images:
    uses: ./.github/workflows/__build-workflow.yaml
    secrets:
      token: ${{ secrets.DOCKERHUB_PUSH_TOKEN }}
    with:
      registry: docker.io
      username: ${{ vars.DOCKERHUB_PUSH_USERNAME  }}
      image-name: kong/gateway-operator
      push: true
      latest: ${{ inputs.latest }}
      tag: ${{ inputs.tag }}

  test-integration-current-kubernetes:
    runs-on: ubuntu-latest
    needs: build-push-images
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Integration Tests
        run: make test.integration

  test-e2e-current-kubernetes:
    runs-on: ubuntu-latest
    needs:
      - semver
      - build-push-images
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: E2E Tests
        run: make test.e2e
        env:
          KONG_TEST_GATEWAY_OPERATOR_IMAGE_OVERRIDE: ${{ needs.build-push-images.outputs.full_tag }}

  create-release-pr:
    runs-on: ubuntu-latest
    needs:
      - semver
      - build-push-images
      - test-integration-current-kubernetes
      - test-e2e-current-kubernetes
    steps:
      # Use the main branch as a base for the release.
      # Any changes made on the branch that the workflow was triggered on will not be included 
      # in the release PR. If anything needs to be fixed before a release, it should be
      # done on the main branch.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      # The bumped version file is included in the release PR.
      - name: Ensure version is set
        env:
          VERSION: ${{ needs.semver.outputs.fullversion }}
        run: |
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo ${VERSION} > VERSION

      # Generated bundles and kustomized config are part of the release PR.
      # This is done locally in this job, to avoid including unintended changes.
      # If anything needs to be fixed before a release, it should be done on the main branch.
      - name: Generate bundle
        run: make bundle

      - name: GPG sign the commits
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # PRs to the main branch will update the version file, generated bundles and kustomized config.
      - name: create a release PR
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ secrets.PAT_GITHUB }}
          path: .
          add-paths: |
            bundle
            config
            VERSION
          commit-message: "chore(${{ inputs.release_type }}): [bot] ${{ env.VERSION }}"
          committer: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          author: Kong's Team k8s bot <team-k8s+github-bot@konghq.com>
          signoff: true
          delete-branch: true
          title: "chore(${{ inputs.release_type }}): [bot] ${{ env.VERSION }}"
          body: "chore(${{ inputs.release_type }}): [bot] ${{ env.VERSION }}"
