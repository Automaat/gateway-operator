// This file is generated by /hack/generators/kic-role-generator. DO NOT EDIT.

package resources

import (
	"fmt"

	"github.com/Masterminds/semver"
	rbacv1 "k8s.io/api/rbac/v1"

	"github.com/kong/gateway-operator/internal/versions"
	"github.com/kong/gateway-operator/pkg/utils/kubernetes/resources/clusterroles"
)

// -----------------------------------------------------------------------------
// ClusterRole generator helper
// -----------------------------------------------------------------------------

var ErrControlPlaneVersionNotSupported = fmt.Errorf("version not supported")

// GenerateNewClusterRoleForControlPlane is a helper function that extract
// the version from the tag, and returns the ClusterRole with all the needed
// permissions.
func GenerateNewClusterRoleForControlPlane(controlplaneName string, image string) (*rbacv1.ClusterRole, error) {
	versionToUse := versions.DefaultControlPlaneVersion
	var constraint *semver.Constraints

	if image != "" {
		v, err := versions.FromImage(image)
		if err != nil {
			return nil, err
		}
		supported, err := versions.IsControlPlaneImageVersionSupported(image)
		if err != nil {
			return nil, err
		}
		if !supported {
			return nil, ErrControlPlaneVersionNotSupported
		}

		versionToUse = v.String()
	}

	semVersion, err := semver.NewVersion(versionToUse)
	if err != nil {
		return nil, err
	}

	constraint, err = semver.NewConstraint(">=3.1")
	if err != nil {
		return nil, err
	}
	if constraint.Check(semVersion) {
		cr := clusterroles.GenerateNewClusterRoleForControlPlane_ge3_1(controlplaneName)
		LabelObjectAsControlPlaneManaged(cr)
		return cr, nil
	}

	return nil, ErrControlPlaneVersionNotSupported
}
